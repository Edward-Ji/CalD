#!/usr/bin/env bash

################################################################################
# Run all
# This script locates all executable scripts prefixed with "test_" in the test
# directory. It runs all of them and display the result with pretty formatting.
# This script must be run from repository root like this - `test/run_all`.
################################################################################

# Path
test_dir='test'
test_tmp="$test_dir/tmp"

# ANSI
bold="\e[1m"
fg_red="\e[31m"
fg_green="\e[32m"
reset_all="\e[0m"
pass="${bold}${fg_green}[pass]${reset_all}"
fail="${bold}${fg_red}[fail]${reset_all}"

declare -i count=0
declare -i passed=0

# Run tests and display results
for test in $(find $test_dir -name "test_*" | sort); do
    # Skip if test is not executable
    [[ -x $test ]] || continue

    ((count++))  # increment testcase count

    # Run test and redirect output to a temporary file
    $test > $test_tmp
    # Record the exit status
    exit_status=$?
    # Get test name
    test_name=$(basename $test | sed 's/_/ /g')
    # Check the exit status
    if [[ $exit_status -eq 0 ]]; then
        printf "${pass} ${test_name}\n"
        ((passed++))  # increment passed count
    else
        printf "${fail} ${test_name}\n"
        # Print the testcase output from temporary file
        if [[ -s $test_tmp ]]; then
            cat $test_tmp | sed 's/^/       /'
        else
            echo "       Testcase failed to run"
        fi
    fi

    # Clean up
    [[ -f $test_tmp ]] && rm $test_tmp
    pkill -9 -f "./daemon.py"
done

# Display overall summary
declare -i failed=$(($count - $passed))
printf "${bold}Test summary${reset_all}
${count} testcases, ${passed} passed, ${failed} failed\n"
